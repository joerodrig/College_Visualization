{
  "name": "varta",
  "version": "0.1.1",
  "description": "Guard your arguments. Verify and throw error if they do not meet your contract",
  "main": "index.js",
  "scripts": {
    "test": "tap test/*.js"
  },
  "keywords": [
    "guard",
    "verify",
    "protect"
  ],
  "author": {
    "name": "Andrei Kashcha"
  },
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "https://github.com/anvaka/varta"
  },
  "dependencies": {},
  "devDependencies": {
    "tap": "^0.4.13"
  },
  "readme": "# varta\n\nGuard your arguments. Verify and throw error if they do not meet your contract\n\n[![build status](https://secure.travis-ci.org/anvaka/varta.png)](http://travis-ci.org/anvaka/varta)\n\n# usage\n\n``` javascript\nvar guard = require('varta');\n\nfunction log(logger) {\n  // this line will throw exception if logger instance is null or doesn't have\n  // a method called `log`:\n  guard(logger).has('log');\n}\n```\n\nYou can also expect multiple properties from an object:\n\n``` javascript\nvar guard = require('varta');\n\nfunction log(logger) {\n  // this line will throw exception if logger instance is null or doesn't have\n  // all three methods: `warn`, `info`, and `debug`\n  guard(logger).has('warn', 'info', 'debug');\n}\n```\n\nYou can save expectations and reuse them in the code:\n\n``` javascript\nvar verify = require('varta').has('warn', 'info', 'debug');\n\nfunction log(logger) {\n  // Our expectations are saved above. If the logger does not have all three\n  // methods (`warn`, `info`, and `debug`) the code will throw an exception\n  verify(logger);\n}\n```\n\n# why?\n\nFailing early is very helpful technique when it comes to maintaining large\ncode bases. If you fail as early as possible you will know exactly where something\nwent wrong, instead of debugging a cryptic error message down the stack.\n\n# install\n\nWith [npm](https://npmjs.org) do:\n\n```\nnpm install varta\n```\n\n# license\n\nMIT\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/anvaka/varta/issues"
  },
  "homepage": "https://github.com/anvaka/varta",
  "_id": "varta@0.1.1",
  "_from": "varta@0.1.1"
}
