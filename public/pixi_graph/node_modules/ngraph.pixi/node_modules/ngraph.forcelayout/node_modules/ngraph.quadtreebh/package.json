{
  "name": "ngraph.quadtreebh",
  "version": "0.0.1",
  "description": "Quad tree data structure for Barnes-Hut simulation",
  "main": "index.js",
  "scripts": {
    "test": "tap test/*.js",
    "perf": "node perf/1m.js"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/anvaka/ngraph.quadtreebh.git"
  },
  "keywords": [
    "ngraph",
    "ngraphjs"
  ],
  "author": {
    "name": "Andrei Kashcha"
  },
  "license": "BSD-3-Clause",
  "bugs": {
    "url": "https://github.com/anvaka/ngraph.quadtreebh/issues"
  },
  "devDependencies": {
    "tap": "~0.4.4",
    "ngraph.physics.primitives": "0.0.2"
  },
  "dependencies": {
    "ngraph.random": "0.0.1"
  },
  "readme": "ngraph.quadtreebh\n=================\n\nImplementation of Barnes-Hut N-Body simulation in Javascript.\n\n[![build status](https://secure.travis-ci.org/anvaka/ngraph.quadtreebh.png)](http://travis-ci.org/anvaka/ngraph.quadtreebh)\nReference\n---------\n1. [Fast Hierarchical Methods for the N-body Problem](http://www.eecs.berkeley.edu/~demmel/cs267/lecture26/lecture26.html) - one of the best explanations of Barnes-Hut method by James Demmel.\n2. [Wikipedia article](http://en.wikipedia.org/wiki/Barnes%E2%80%93Hut_simulation) - general introduction into the problem\n\nUsage\n=====\nI'm still working on API and it might be changed in future. \n``` js\nvar Body = require('ngraph.physics.primitives').Body;\n// Create new bodies at (1, 0) and (2, 0):\nvar bodies = [];\nbodies.push(new Body(1, 0));\nbodies.push(new Body(2, 0));\n/* ... create more as you need ... */\n\n// build quad tree:\nvar createQuadTree = require('ngraph.quadtreebh');\nvar quadTree = createQuadTree();\n\n// insert bodies into the quad tree \nquadTree.insertBodies(bodies); // performance: O(n * log n)\n\n// calculate forces acting on each body in the tree O(n * log n):\nbodies.forEach(function(body) {\n  quadTree.updateBodyForce(body);\n});\n// At this point every body object has valid 2d force vecor\nconsole.dir(bodies[0].force);\n```\n\n_Note:_ You don't necessary have to use [ngraph.physics.primitives](https://github.com/anvaka/ngraph.physics.primitives). That package merely defines an interface for a physical Body, which is expected by quad tree. As long as your Body object implements this interface (`mass`, `pos` and `force`) - you can use current quad tree structure to calculate forces.\n\nConfiguring quad tree\n=====================\nQuad tree allows to change two global options:\n\n* `gravity` - [Gravitational constant](http://en.wikipedia.org/wiki/Gravitational_constant), used in force value calculation. Defaults to `-1`;\n* `theta` - a threshold which determines when group of bodies is considered distant enough to be approximated as a single body. The value should be `> 0`, and usually little less than `1`. It defaults to `0.8` if not suplied. This argument affects accuracy and speed of simulation. Please refer to [\\[1\\]](http://www.eecs.berkeley.edu/~demmel/cs267/lecture26/lecture26.html) for more details.\n\nYou can pass these setting to quad tree as follows:\n``` js\nvar createQuadTree = require('ngraph.quadtreebh');\nvar quadTree = createQuadTree({\n  theta: 1.2,\n  gravity: -10\n});\n```\n\nTo query current options of the tree use:\n``` js\nvar createQuadTree = require('ngraph.quadtreebh');\nvar quadTree = createQuadTree();\nconsole.dir(quadTree.options()); // prints { theta: 0.8, gravity: -1};\n```\n\nTo change options at run time:\n``` js\nvar createQuadTree = require('ngraph.quadtreebh');\nvar quadTree = createQuadTree();\nquadTree.options({\n  theta: 0.5,\n  gravity: -42\n});\n```\n\nMass of each body affects overall result of computation. You can tweak it when creating new bodies:\n``` js\nvar Body = require('ngraph.physics.primitives').Body;\nvar earth = new Body(); earth.mass = 5.972;\nvar sun   = new Body(); sun.mass = 1989000;\n```\n\nInstall\n=======\n```\nnpm install ngraph.quadtreebh\n```\n\nLicense\n=======\nBSD 3-Clause\n",
  "readmeFilename": "README.md",
  "homepage": "https://github.com/anvaka/ngraph.quadtreebh",
  "_id": "ngraph.quadtreebh@0.0.1",
  "_from": "ngraph.quadtreebh@0.0.1"
}
