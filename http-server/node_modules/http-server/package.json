{
  "name": "http-server",
  "version": "0.7.4",
  "description": "a simple zero-configuration command-line http server",
  "main": "./lib/http-server",
  "repository": {
    "type": "git",
    "url": "git://github.com/nodeapps/http-server.git"
  },
  "keywords": [
    "cli",
    "command"
  ],
  "scripts": {
    "start": "node ./bin/http-server",
    "pretest": "stylezero bin/ lib/ test",
    "test": "vows --spec --isolate"
  },
  "contributors": [
    {
      "name": "Charlie Robbins",
      "email": "charlie.robbins@gmail.com"
    },
    {
      "name": "Marak Squires",
      "email": "marak.squires@gmail.com"
    },
    {
      "name": "Charlie McConnell",
      "email": "charlie@charlieistheman.com"
    },
    {
      "name": "Joshua Holbrook",
      "email": "josh.holbrook@gmail.com"
    },
    {
      "name": "Maciej Ma≈Çecki",
      "email": "maciej.malecki@notimplemented.org"
    },
    {
      "name": "Matthew Bergman",
      "email": "mzbphoto@gmail.com"
    },
    {
      "name": "brad dunbar",
      "email": "dunbarb2@gmail.com"
    },
    {
      "name": "Dominic Tarr"
    },
    {
      "name": "Travis Person",
      "email": "travis.person@gmail.com"
    },
    {
      "name": "Jinkwon Lee",
      "email": "master@bdyne.net"
    }
  ],
  "dependencies": {
    "colors": "1.0.3",
    "optimist": "0.6.x",
    "union": "~0.4.3",
    "ecstatic": "~0.5.6",
    "portfinder": "0.2.x",
    "opener": "~1.4.0"
  },
  "devDependencies": {
    "vows": "0.7.x",
    "request": "2.49.x",
    "stylezero": "2.1.1"
  },
  "bugs": {
    "url": "https://github.com/nodeapps/http-server/issues"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/nodeapps/http-server/raw/master/LICENSE"
    }
  ],
  "analyze": false,
  "preferGlobal": "true",
  "bin": {
    "http-server": "./bin/http-server",
    "hs": "./bin/http-server"
  },
  "readme": "# http-server: a command-line http server\n\n`http-server` is a simple, zero-configuration command-line http server.  It is powerful enough for production usage, but it's simple and hackable enough to be used for testing, local development, and learning.\n\n![](https://github.com/nodeapps/http-server/raw/master/screenshots/public.png)\n\n# Installing globally:\n\nInstallation via `npm`.  If you don't have `npm` yet:\n\n     curl https://npmjs.org/install.sh | sh\n\nOnce you have `npm`:\n\n     npm install http-server -g\n\nThis will install `http-server` globally so that it may be run from the command line.\n\n## Usage:\n\n     http-server [path] [options]\n\n`[path]` defaults to `./public` if the folder exists, and `./` otherwise.\n\n# Installing as a node app\n\n     mkdir myapp\n     cd myapp/\n     jitsu install http-server\n\n*If you do not have `jitsu` installed you can install it via `npm install jitsu -g`*\n\n## Usage\n\n### Starting http-server locally\n\n     node bin/http-server\n\n*Now you can visit http://localhost:8080 to view your server*\n\n### Deploy http-server to nodejitsu\n\n     jitsu deploy\n\n*You will now be prompted for a `subdomain` to deploy your application on*\n\n## Available Options:\n\n`-p` Port to use (defaults to 8080)\n\n`-a` Address to use (defaults to 0.0.0.0)\n\n`-d` Show directory listings (defaults to 'True')\n\n`-i` Display autoIndex (defaults to 'True')\n\n`-e` or `--ext` Default file extension if none supplied (defaults to 'html')\n\n`-s` or `--silent` Suppress log messages from output\n\n`--cors` Enable CORS via the `Access-Control-Allow-Origin` header\n\n`-o` Open browser window after staring the server\n\n`-h` or `--help` Print this list and exit.\n\n`-c` Set cache time (in seconds) for cache-control max-age header, e.g. -c10 for 10 seconds\n(defaults to '3600'). To disable caching, use -c-1.\n",
  "readmeFilename": "README.md",
  "homepage": "https://github.com/nodeapps/http-server",
  "_id": "http-server@0.7.4",
  "_from": "http-server@"
}
